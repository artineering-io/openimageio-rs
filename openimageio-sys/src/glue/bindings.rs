/* automatically generated by rust-bindgen */

pub const true_: u32 = 1;
pub const false_: u32 = 0;
pub const __bool_true_false_are_defined: u32 = 1;
pub type wchar_t = ::std::os::raw::c_ushort;
pub type max_align_t = f64;
pub type stride_t = isize;
pub type imagesize_t = ::std::os::raw::c_ulonglong;
pub type ImageSpec = ::std::os::raw::c_void;
pub type ImageInput = ::std::os::raw::c_void;
pub type ImageOutput = ::std::os::raw::c_void;
pub type ImageCache = ::std::os::raw::c_void;
pub type DeepData = ::std::os::raw::c_void;
pub type ImageBuf = ::std::os::raw::c_void;
pub type ROI = ::std::os::raw::c_void;
pub type Tile = ::std::os::raw::c_void;
pub type ProgressCallback = ::std::option::Option<
    unsafe extern "C" fn(opaque_data: *mut ::std::os::raw::c_void, portion_done: f32) -> bool,
>;
extern "C" {
    pub fn image_progress_callback(goCallback: *mut ::std::os::raw::c_void, done: f32) -> bool;
}
pub const TypeDesc_TYPE_UNKNOWN: TypeDesc = -1;
pub const TypeDesc_TYPE_UINT8: TypeDesc = 0;
pub const TypeDesc_TYPE_INT8: TypeDesc = 1;
pub const TypeDesc_TYPE_UINT16: TypeDesc = 2;
pub const TypeDesc_TYPE_INT16: TypeDesc = 3;
pub const TypeDesc_TYPE_UINT: TypeDesc = 4;
pub const TypeDesc_TYPE_INT: TypeDesc = 5;
pub const TypeDesc_TYPE_UINT64: TypeDesc = 6;
pub const TypeDesc_TYPE_INT64: TypeDesc = 7;
pub const TypeDesc_TYPE_HALF: TypeDesc = 8;
pub const TypeDesc_TYPE_FLOAT: TypeDesc = 9;
pub const TypeDesc_TYPE_DOUBLE: TypeDesc = 10;
pub type TypeDesc = i32;
pub const IBStorage_IBSTORAGE_UNINITIALIZED: IBStorage = 0;
pub const IBStorage_IBSTORAGE_LOCALBUFFER: IBStorage = 1;
pub const IBStorage_IBSTORAGE_APPBUFFER: IBStorage = 2;
pub const IBStorage_IBSTORAGE_IMAGECACHE: IBStorage = 3;
pub type IBStorage = i32;
pub const WrapMode_WrapDefault: WrapMode = 0;
pub const WrapMode_WrapBlack: WrapMode = 1;
pub const WrapMode_WrapClamp: WrapMode = 2;
pub const WrapMode_WrapPeriodic: WrapMode = 3;
pub const WrapMode_WrapMirror: WrapMode = 4;
pub const WrapMode__WrapLast: WrapMode = 5;
pub type WrapMode = i32;
extern "C" {
    pub fn deleteImageInput(in_: *mut ImageInput);
}
extern "C" {
    pub fn ImageInput_Open(
        filename: *const ::std::os::raw::c_char,
        config: *const ImageSpec,
    ) -> *mut ImageInput;
}
extern "C" {
    pub fn ImageInput_Create(
        filename: *const ::std::os::raw::c_char,
        plugin_searchpath: *const ::std::os::raw::c_char,
    ) -> *mut ImageInput;
}
extern "C" {
    pub fn ImageInput_format_name(in_: *mut ImageInput) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn ImageInput_valid_file(
        in_: *mut ImageInput,
        filename: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn ImageInput_open(
        in_: *mut ImageInput,
        name: *const ::std::os::raw::c_char,
        newspec: *mut ImageSpec,
    ) -> bool;
}
extern "C" {
    pub fn ImageInput_spec(in_: *mut ImageInput) -> *const ImageSpec;
}
extern "C" {
    pub fn ImageInput_supports(
        in_: *mut ImageInput,
        feature: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn ImageInput_close(in_: *mut ImageInput) -> bool;
}
extern "C" {
    pub fn ImageInput_current_subimage(in_: *mut ImageInput) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageInput_current_miplevel(in_: *mut ImageInput) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageInput_seek_subimage(
        in_: *mut ImageInput,
        subimage: ::std::os::raw::c_int,
        newspec: *mut ImageSpec,
    ) -> bool;
}
extern "C" {
    pub fn ImageInput_seek_subimage_miplevel(
        in_: *mut ImageInput,
        subimage: ::std::os::raw::c_int,
        miplevel: ::std::os::raw::c_int,
        newspec: *mut ImageSpec,
    ) -> bool;
}
extern "C" {
    pub fn ImageInput_read_scanline_floats(
        in_: *mut ImageInput,
        y: ::std::os::raw::c_int,
        z: ::std::os::raw::c_int,
        data: *mut f32,
    ) -> bool;
}
extern "C" {
    pub fn ImageInput_read_tile_floats(
        in_: *mut ImageInput,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        z: ::std::os::raw::c_int,
        data: *mut f32,
    ) -> bool;
}
extern "C" {
    pub fn ImageInput_read_image_floats(in_: *mut ImageInput, data: *mut f32) -> bool;
}
extern "C" {
    pub fn ImageInput_read_image_format(
        in_: *mut ImageInput,
        format: TypeDesc,
        data: *mut ::std::os::raw::c_void,
        cbk_data: *mut ::std::os::raw::c_void,
    ) -> bool;
}
extern "C" {
    pub fn ImageInput_geterror(in_: *mut ImageInput) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn deleteImageOutput(out: *mut ImageOutput);
}
extern "C" {
    pub fn ImageOutput_Create(
        filename: *const ::std::os::raw::c_char,
        plugin_searchpath: *const ::std::os::raw::c_char,
    ) -> *mut ImageOutput;
}
extern "C" {
    pub fn ImageOutput_format_name(out: *mut ImageOutput) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn ImageOutput_spec(out: *mut ImageOutput) -> *const ImageSpec;
}
extern "C" {
    pub fn ImageOutput_supports(
        out: *mut ImageOutput,
        feature: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn ImageOutput_geterror(out: *mut ImageOutput) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn deleteImageSpec(spec: *mut ImageSpec);
}
extern "C" {
    pub fn ImageSpec_New(fmt: TypeDesc) -> *mut ImageSpec;
}
extern "C" {
    pub fn ImageSpec_New_Size(
        xres: ::std::os::raw::c_int,
        yres: ::std::os::raw::c_int,
        nchans: ::std::os::raw::c_int,
        fmt: TypeDesc,
    ) -> *mut ImageSpec;
}
extern "C" {
    pub fn ImageSpec_set_format(spec: *mut ImageSpec, fmt: TypeDesc);
}
extern "C" {
    pub fn ImageSpec_default_channel_names(spec: *mut ImageSpec);
}
extern "C" {
    pub fn ImageSpec_channel_bytes(spec: *mut ImageSpec) -> usize;
}
extern "C" {
    pub fn ImageSpec_channel_bytes_chan(
        spec: *mut ImageSpec,
        chan: ::std::os::raw::c_int,
        native: bool,
    ) -> usize;
}
extern "C" {
    pub fn ImageSpec_pixel_bytes(spec: *mut ImageSpec, native: bool) -> usize;
}
extern "C" {
    pub fn ImageSpec_pixel_bytes_chans(
        spec: *mut ImageSpec,
        chbegin: ::std::os::raw::c_int,
        chend: ::std::os::raw::c_int,
        native: bool,
    ) -> usize;
}
extern "C" {
    pub fn ImageSpec_scanline_bytes(spec: *mut ImageSpec, native: bool) -> imagesize_t;
}
extern "C" {
    pub fn ImageSpec_tile_pixels(spec: *mut ImageSpec) -> imagesize_t;
}
extern "C" {
    pub fn ImageSpec_tile_bytes(spec: *mut ImageSpec, native: bool) -> imagesize_t;
}
extern "C" {
    pub fn ImageSpec_image_pixels(spec: *mut ImageSpec) -> imagesize_t;
}
extern "C" {
    pub fn ImageSpec_image_bytes(spec: *mut ImageSpec, native: bool) -> imagesize_t;
}
extern "C" {
    pub fn ImageSpec_size_safe(spec: *mut ImageSpec) -> bool;
}
extern "C" {
    pub fn ImageSpec_to_xml(spec: *mut ImageSpec) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn ImageSpec_channelformat(spec: *mut ImageSpec, chan: ::std::os::raw::c_int) -> TypeDesc;
}
extern "C" {
    pub fn ImageSpec_x(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_x(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_y(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_y(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_z(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_z(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_width(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_width(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_height(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_height(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_depth(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_depth(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_full_x(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_full_x(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_full_y(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_full_y(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_full_z(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_full_z(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_full_width(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_full_width(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_full_height(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_full_height(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_full_depth(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_full_depth(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_tile_width(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_tile_width(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_tile_height(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_tile_height(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_tile_depth(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_tile_depth(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_nchannels(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_nchannels(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_format(spec: *mut ImageSpec) -> TypeDesc;
}
extern "C" {
    pub fn ImageSpec_channelformats(spec: *mut ImageSpec, out: *mut TypeDesc);
}
extern "C" {
    pub fn ImageSpec_set_channelformats(spec: *mut ImageSpec, formats: *mut TypeDesc);
}
extern "C" {
    pub fn ImageSpec_channelnames(spec: *mut ImageSpec, out: *mut *mut ::std::os::raw::c_char);
}
extern "C" {
    pub fn ImageSpec_set_channelnames(
        spec: *mut ImageSpec,
        names: *mut *mut ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn ImageSpec_alpha_channel(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_alpha_channel(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_z_channel(spec: *mut ImageSpec) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_set_z_channel(spec: *mut ImageSpec, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageSpec_deep(spec: *mut ImageSpec) -> bool;
}
extern "C" {
    pub fn ImageSpec_set_deep(spec: *mut ImageSpec, val: bool);
}
extern "C" {
    pub fn ImageSpec_attribute_type_data(
        spec: *mut ImageSpec,
        name: *const ::std::os::raw::c_char,
        type_: TypeDesc,
        value: *const ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn ImageSpec_attribute_type_char(
        spec: *mut ImageSpec,
        name: *const ::std::os::raw::c_char,
        type_: TypeDesc,
        value: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn ImageSpec_attribute_uint(
        spec: *mut ImageSpec,
        name: *const ::std::os::raw::c_char,
        value: ::std::os::raw::c_uint,
    );
}
extern "C" {
    pub fn ImageSpec_attribute_int(
        spec: *mut ImageSpec,
        name: *const ::std::os::raw::c_char,
        value: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ImageSpec_attribute_float(
        spec: *mut ImageSpec,
        name: *const ::std::os::raw::c_char,
        value: f32,
    );
}
extern "C" {
    pub fn ImageSpec_attribute_char(
        spec: *mut ImageSpec,
        name: *const ::std::os::raw::c_char,
        value: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn ImageSpec_get_int_attribute(
        spec: *mut ImageSpec,
        name: *const ::std::os::raw::c_char,
        defaultval: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageSpec_get_float_attribute(
        spec: *mut ImageSpec,
        name: *const ::std::os::raw::c_char,
        defaultval: f32,
    ) -> f32;
}
extern "C" {
    pub fn ImageSpec_get_string_attribute(
        spec: *mut ImageSpec,
        name: *const ::std::os::raw::c_char,
        defaultval: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn ImageSpec_erase_attribute(
        spec: *mut ImageSpec,
        name: *const ::std::os::raw::c_char,
        searchtype: TypeDesc,
        caseSensitive: bool,
    );
}
extern "C" {
    pub fn ImageBuf_New() -> *mut ImageBuf;
}
extern "C" {
    pub fn ImageBuf_New_WithCache(
        name: *const ::std::os::raw::c_char,
        imagecache: *mut ImageCache,
    ) -> *mut ImageBuf;
}
extern "C" {
    pub fn ImageBuf_New_WithBuffer(
        name: *const ::std::os::raw::c_char,
        spec: *const ImageSpec,
        buffer: *mut ::std::os::raw::c_void,
    ) -> *mut ImageBuf;
}
extern "C" {
    pub fn ImageBuf_New_SubImage(
        name: *const ::std::os::raw::c_char,
        subimage: ::std::os::raw::c_int,
        miplevel: ::std::os::raw::c_int,
        imagecache: *mut ImageCache,
    ) -> *mut ImageBuf;
}
extern "C" {
    pub fn ImageBuf_New_Spec(spec: *const ImageSpec) -> *mut ImageBuf;
}
extern "C" {
    pub fn deleteImageBuf(buf: *mut ImageBuf);
}
extern "C" {
    pub fn ImageBuf_clear(buf: *mut ImageBuf);
}
extern "C" {
    pub fn ImageBuf_reset_subimage(
        buf: *mut ImageBuf,
        name: *const ::std::os::raw::c_char,
        subimage: ::std::os::raw::c_int,
        miplevel: ::std::os::raw::c_int,
        imagecache: *mut ImageCache,
    );
}
extern "C" {
    pub fn ImageBuf_reset_name_cache(
        buf: *mut ImageBuf,
        name: *const ::std::os::raw::c_char,
        imagecache: *mut ImageCache,
    );
}
extern "C" {
    pub fn ImageBuf_reset_spec(buf: *mut ImageBuf, spec: *mut ImageSpec);
}
extern "C" {
    pub fn ImageBuf_reset_name_spec(
        buf: *mut ImageBuf,
        name: *const ::std::os::raw::c_char,
        spec: *const ImageSpec,
    );
}
extern "C" {
    pub fn ImageBuf_storage(buf: *mut ImageBuf) -> IBStorage;
}
extern "C" {
    pub fn ImageBuf_initialized(buf: *mut ImageBuf) -> bool;
}
extern "C" {
    pub fn ImageBuf_read(
        buf: *mut ImageBuf,
        subimage: ::std::os::raw::c_int,
        miplevel: ::std::os::raw::c_int,
        force: bool,
        convert: TypeDesc,
        cbk_data: *mut ::std::os::raw::c_void,
    ) -> bool;
}
extern "C" {
    pub fn ImageBuf_init_spec(
        buf: *mut ImageBuf,
        filename: *const ::std::os::raw::c_char,
        subimage: ::std::os::raw::c_int,
        miplevel: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    pub fn ImageBuf_write_file(
        buf: *mut ImageBuf,
        filename: *const ::std::os::raw::c_char,
        fileformat: *const ::std::os::raw::c_char,
        cbk_data: *mut ::std::os::raw::c_void,
    ) -> bool;
}
extern "C" {
    pub fn ImageBuf_write_output(
        buf: *mut ImageBuf,
        out: *mut ImageOutput,
        cbk_data: *mut ::std::os::raw::c_void,
    ) -> bool;
}
extern "C" {
    pub fn ImageBuf_set_write_format(buf: *mut ImageBuf, format: TypeDesc);
}
extern "C" {
    pub fn ImageBuf_set_write_tiles(
        buf: *mut ImageBuf,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        depth: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ImageBuf_copy_metadata(dst: *mut ImageBuf, src: *const ImageBuf);
}
extern "C" {
    pub fn ImageBuf_copy_pixels(dst: *mut ImageBuf, src: *const ImageBuf) -> bool;
}
extern "C" {
    pub fn ImageBuf_copy(dst: *mut ImageBuf, src: *const ImageBuf) -> bool;
}
extern "C" {
    pub fn ImageBuf_swap(buf: *mut ImageBuf, other: *mut ImageBuf);
}
extern "C" {
    pub fn ImageBuf_geterror(buf: *mut ImageBuf) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn ImageBuf_spec(buf: *mut ImageBuf) -> *const ImageSpec;
}
extern "C" {
    pub fn ImageBuf_specmod(buf: *mut ImageBuf) -> *mut ImageSpec;
}
extern "C" {
    pub fn ImageBuf_nativespec(buf: *mut ImageBuf) -> *const ImageSpec;
}
extern "C" {
    pub fn ImageBuf_name(buf: *mut ImageBuf) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn ImageBuf_file_format_name(buf: *mut ImageBuf) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn ImageBuf_subimage(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_nsubimages(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_miplevel(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_nmiplevels(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_nchannels(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_get_pixel_channels(
        buf: *mut ImageBuf,
        xbegin: ::std::os::raw::c_int,
        xend: ::std::os::raw::c_int,
        ybegin: ::std::os::raw::c_int,
        yend: ::std::os::raw::c_int,
        zbegin: ::std::os::raw::c_int,
        zend: ::std::os::raw::c_int,
        chbegin: ::std::os::raw::c_int,
        chend: ::std::os::raw::c_int,
        format: TypeDesc,
        result: *mut ::std::os::raw::c_void,
    ) -> bool;
}
extern "C" {
    pub fn ImageBuf_orientation(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_oriented_width(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_oriented_height(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_oriented_x(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_oriented_y(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_oriented_full_width(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_oriented_full_height(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_oriented_full_x(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_oriented_full_y(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_xbegin(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_xend(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_ybegin(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_yend(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_zbegin(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_zend(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_xmin(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_xmax(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_ymin(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_ymax(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_zmin(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_zmax(buf: *mut ImageBuf) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ImageBuf_set_full(
        buf: *mut ImageBuf,
        xbegin: ::std::os::raw::c_int,
        xend: ::std::os::raw::c_int,
        ybegin: ::std::os::raw::c_int,
        yend: ::std::os::raw::c_int,
        zbegin: ::std::os::raw::c_int,
        zend: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ImageBuf_roi(buf: *mut ImageBuf) -> *mut ROI;
}
extern "C" {
    pub fn ImageBuf_roi_full(buf: *mut ImageBuf) -> *mut ROI;
}
extern "C" {
    pub fn ImageBuf_set_roi_full(buf: *mut ImageBuf, newroi: *mut ROI);
}
extern "C" {
    pub fn ImageBuf_pixels_valid(buf: *mut ImageBuf) -> bool;
}
extern "C" {
    pub fn ImageBuf_pixeltype(buf: *mut ImageBuf) -> TypeDesc;
}
extern "C" {
    pub fn ImageBuf_cachedpixels(buf: *mut ImageBuf) -> bool;
}
extern "C" {
    pub fn ImageBuf_imagecache(buf: *mut ImageBuf) -> *mut ImageCache;
}
extern "C" {
    pub fn ImageBuf_deep(buf: *mut ImageBuf) -> bool;
}
extern "C" {
    pub fn deleteROI(roi: *mut ROI);
}
extern "C" {
    pub fn ROI_New() -> *mut ROI;
}
extern "C" {
    pub fn ROI_NewOptions(
        xbeing: ::std::os::raw::c_int,
        xend: ::std::os::raw::c_int,
        ybegin: ::std::os::raw::c_int,
        yend: ::std::os::raw::c_int,
        zbegin: ::std::os::raw::c_int,
        zend: ::std::os::raw::c_int,
        chbegin: ::std::os::raw::c_int,
        chend: ::std::os::raw::c_int,
    ) -> *mut ROI;
}
extern "C" {
    pub fn ROI_Copy(roi: *const ROI) -> *mut ROI;
}
extern "C" {
    pub fn ROI_defined(roi: *mut ROI) -> bool;
}
extern "C" {
    pub fn ROI_width(roi: *mut ROI) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ROI_height(roi: *mut ROI) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ROI_depth(roi: *mut ROI) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ROI_nchannels(roi: *mut ROI) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ROI_npixels(roi: *mut ROI) -> imagesize_t;
}
extern "C" {
    pub fn ROI_xbegin(roi: *mut ROI) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ROI_set_xbegin(roi: *mut ROI, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ROI_xend(roi: *mut ROI) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ROI_set_xend(roi: *mut ROI, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ROI_ybegin(roi: *mut ROI) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ROI_set_ybegin(roi: *mut ROI, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ROI_yend(roi: *mut ROI) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ROI_set_yend(roi: *mut ROI, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ROI_zbegin(roi: *mut ROI) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ROI_set_zbegin(roi: *mut ROI, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ROI_zend(roi: *mut ROI) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ROI_set_zend(roi: *mut ROI, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ROI_chbegin(roi: *mut ROI) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ROI_set_chbegin(roi: *mut ROI, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ROI_chend(roi: *mut ROI) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ROI_set_chend(roi: *mut ROI, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ImageCache_Create(shared: bool) -> *mut ImageCache;
}
extern "C" {
    pub fn ImageCache_Destroy(x: *mut ImageCache, teardown: bool);
}
extern "C" {
    pub fn ImageCache_clear(x: *mut ImageCache);
}
extern "C" {
    pub fn ImageCache_geterror(x: *mut ImageCache) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn ImageCache_getstats(
        x: *mut ImageCache,
        level: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn ImageCache_reset_stats(x: *mut ImageCache);
}
extern "C" {
    pub fn ImageCache_invalidate(x: *mut ImageCache, filename: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn ImageCache_invalidate_all(x: *mut ImageCache, force: bool);
}
